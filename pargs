#!/usr/bin/env perl

use strict;
use warnings;
use utf8;
use v5.10; # in order to use `say` safely
use Data::Dumper;
use Term::ANSIColor;

use Getopt::Long;
#use Data::Printer;

my $SEP;
my $n;
my $replace;

GetOptions(
	'delimiter=s' => \$SEP,
	'n=i' => \$n,
	'replace=s' => \$replace,
);

&pe ('sep', $SEP);
&pe ('n', $n);

die 'n should not be 0' if $n && $n == 0;

my @args = ();

if (defined($SEP)){
	my @lines = <STDIN>;
	$_ = join "\n", @lines;
	push @args, split($SEP, $_);
}
else{
	chomp(@args = <STDIN>);
}

my @cmd = @ARGV;
if (@cmd == 0){
	push @cmd, 'echo';
}
push @cmd, @args;

if (defined $n){
	while (@_ = splice(@args,0, $n)){
		# TODO: sub replace_str with args
		#system @_;
		say STDERR 'Not implemented';
	}
}
else{
	exec @cmd;
}

sub pe{
	$_ = shift;
	say color('red'), "$_: ", (Dumper @_), color('reset');
}
